#!/usr/bin/mksh

fatal() {
  msg "$@" >&2
  exit 1
}

msg() {
  printf "$@"
}

sv_enable() {
  [ ! -e "${SVDIR}${1}" ] && fatal "service '${1}' not found.\n"
  [ -e "${SERVICEDIR}${1}" ] && fatal "service '${1}' already enabled.\n"
  ln -sfv "${SVDIR}${1}" "${SERVICEDIR}${1}"
}

sv_disable() {
  [ ! -e "${SVDIR}${1}" ] && fatal "service '${1}' not found."
  [ ! -e "${SERVICEDIR}${1}" ] && fatal "service '${1}' already disabled.\n"
  rm -rfv "${SERVICEDIR}${1}"
}

sv_list() {
  sv s "${SVDIR}"* 2>/dev/null
}

sv_deps() {
  for service in "$@"; do
    # TODO: check if service exists
    case $(cat "${SVDIR}${service}/supervise/stat") in
      run*)
        /home/duncan/bin/s check "${service}" >/dev/null || wait+=" $service"
        ;;
      down*)
        /home/duncan/bin/s u "${service}" >/dev/null && wait+=" $service"
        ;;
    esac
  done
  [ -z "$wait" ] || fatal "wait for dependencies:$wait.\n"
  exit 0
}

while getopts "u:w:v" opt; do
  case "$opt" in
    u) SVUSER="$OPTARG" ;;
    w) export SVWAIT="$OPTARG" ;;
  esac
done
shift $(($OPTIND - 1))

: ${SVUSER:=$USER}

case "$SVUSER" in
  root)
    SVDIR="/etc/sv/"
    SERVICEDIR="/var/service/"
    ;;
  *)
    HOMEDIR=$(getent passwd "$SVUSER" | cut -d':' -f6)
    SVDIR="${HOMEDIR}/sv/"
    SERVICEDIR="${HOMEDIR}/service/"
    ;;
esac

case "$1" in
  ls|list) sv_list "$2" ;;
  enable) sv_enable "$2" ;;
  disable) sv_disable "$2" ;;
  deps) shift 1; sv_deps "$@" ;;
  tree) shift 1; sv_tree "$SVDIR" ;;
  *) SVDIR="$SVDIR" sv "$@" ;;
esac
